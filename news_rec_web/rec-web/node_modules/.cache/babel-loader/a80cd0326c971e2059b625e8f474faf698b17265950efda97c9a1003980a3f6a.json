{"ast":null,"code":"const CryptoJS = require('crypto-js'); //引用AES源码js\n\nconst key = CryptoJS.enc.Utf8.parse(\"1234123412ABCDEF\"); //十六位十六进制数作为密钥\nconst iv = CryptoJS.enc.Utf8.parse('ABCDEF1234123412'); //十六位十六进制数作为密钥偏移量\n\n//解密方法\nfunction Decrypt(word) {\n  let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\n  let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n  let decrypt = CryptoJS.AES.decrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n  return decryptedStr.toString();\n}\n\n//加密方法\nfunction Encrypt(word) {\n  let srcs = CryptoJS.enc.Utf8.parse(word);\n  let encrypted = CryptoJS.AES.encrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  return encrypted.ciphertext.toString().toUpperCase();\n}\nexport default {\n  Decrypt,\n  Encrypt\n};","map":{"version":3,"names":["CryptoJS","require","key","enc","Utf8","parse","iv","Decrypt","word","encryptedHexStr","Hex","srcs","Base64","stringify","decrypt","AES","mode","CBC","padding","pad","Pkcs7","decryptedStr","toString","Encrypt","encrypted","encrypt","ciphertext","toUpperCase"],"sources":["/home/harry/fun-rec/codes/news_recsys/news_rec_web/rec-web/src/assets/js/encrypt.js"],"sourcesContent":["const CryptoJS = require('crypto-js');  //引用AES源码js\r\n    \r\nconst key = CryptoJS.enc.Utf8.parse(\"1234123412ABCDEF\");  //十六位十六进制数作为密钥\r\nconst iv = CryptoJS.enc.Utf8.parse('ABCDEF1234123412');   //十六位十六进制数作为密钥偏移量\r\n\r\n//解密方法\r\nfunction Decrypt(word) {\r\n    let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\r\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\r\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n    return decryptedStr.toString();\r\n}\r\n\r\n//加密方法\r\nfunction Encrypt(word) {\r\n    let srcs = CryptoJS.enc.Utf8.parse(word);\r\n    let encrypted = CryptoJS.AES.encrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n    return encrypted.ciphertext.toString().toUpperCase();\r\n}\r\n\r\nexport default {\r\n    Decrypt ,\r\n    Encrypt\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;;AAExC,MAAMC,GAAG,GAAGF,QAAQ,CAACG,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAE;AAC1D,MAAMC,EAAE,GAAGN,QAAQ,CAACG,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAG;;AAE1D;AACA,SAASE,OAAOA,CAACC,IAAI,EAAE;EACnB,IAAIC,eAAe,GAAGT,QAAQ,CAACG,GAAG,CAACO,GAAG,CAACL,KAAK,CAACG,IAAI,CAAC;EAClD,IAAIG,IAAI,GAAGX,QAAQ,CAACG,GAAG,CAACS,MAAM,CAACC,SAAS,CAACJ,eAAe,CAAC;EACzD,IAAIK,OAAO,GAAGd,QAAQ,CAACe,GAAG,CAACD,OAAO,CAACH,IAAI,EAAET,GAAG,EAAE;IAAEI,EAAE,EAAEA,EAAE;IAAEU,IAAI,EAAEhB,QAAQ,CAACgB,IAAI,CAACC,GAAG;IAAEC,OAAO,EAAElB,QAAQ,CAACmB,GAAG,CAACC;EAAM,CAAC,CAAC;EAC/G,IAAIC,YAAY,GAAGP,OAAO,CAACQ,QAAQ,CAACtB,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC;EACtD,OAAOiB,YAAY,CAACC,QAAQ,CAAC,CAAC;AAClC;;AAEA;AACA,SAASC,OAAOA,CAACf,IAAI,EAAE;EACnB,IAAIG,IAAI,GAAGX,QAAQ,CAACG,GAAG,CAACC,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC;EACxC,IAAIgB,SAAS,GAAGxB,QAAQ,CAACe,GAAG,CAACU,OAAO,CAACd,IAAI,EAAET,GAAG,EAAE;IAAEI,EAAE,EAAEA,EAAE;IAAEU,IAAI,EAAEhB,QAAQ,CAACgB,IAAI,CAACC,GAAG;IAAEC,OAAO,EAAElB,QAAQ,CAACmB,GAAG,CAACC;EAAM,CAAC,CAAC;EACjH,OAAOI,SAAS,CAACE,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;AACxD;AAEA,eAAe;EACXpB,OAAO;EACPgB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
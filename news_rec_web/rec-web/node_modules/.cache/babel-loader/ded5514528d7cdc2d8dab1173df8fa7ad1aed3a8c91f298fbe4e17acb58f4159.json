{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Toast } from 'vant';\nimport encrypt from '../assets/js/encrypt';\nexport default {\n  name: 'signIn',\n  data() {\n    return {\n      model: {\n        username: '',\n        passwd: '123456'\n      },\n      val: 'login',\n      checked: false\n    };\n  },\n  methods: {\n    login() {\n      let url = '/recsys/login';\n      //密码解密\n      let res = {\n        username: this.model.username,\n        passwd: encrypt.Decrypt(this.model.passwd)\n      };\n      this.axios.post(url, res).then(resource => {\n        if (resource.data.code === 200) {\n          console.log('success');\n          let loginInfo = {\n            LoginName: res.username,\n            openId: \"asfafsfsfsdfsdfsdfdsf\"\n          };\n\n          // checke:true--选中记住我   checke:false--未选中记住我\n          if (this.checked) {\n            // 调用setCookie方法，同时传递需要存储的数据，保存天数\n            this.cookie.setCookie(loginInfo, 7);\n          } else {\n            this.cookie.setCookie(loginInfo, 1);\n          }\n          this.$store.state.type = 'signIn';\n          this.$store.state.user.username = res.username;\n          const toast = Toast({\n            message: '登陆成功',\n            icon: 'success'\n          });\n          let second = 1;\n          // 延迟一秒执行\n          const timer = setInterval(() => {\n            second--;\n            if (!second) {\n              clearInterval(timer);\n              // 手动清除 Toast\n              Toast.clear();\n              this.$router.push({\n                name: 'recLists',\n                params: {\n                  type: 'signIn',\n                  username: this.model.username\n                }\n              });\n            }\n          }, 1000);\n        }\n        if (resource.data.code === 500) {\n          Toast('登陆失败');\n        }\n        if (resource.data.code === 501) {\n          Toast('密码输入错误');\n        }\n        if (resource.data.code === 502) {\n          Toast('用户名不存在');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Toast","encrypt","name","data","model","username","passwd","val","checked","methods","login","url","res","Decrypt","axios","post","then","resource","code","console","log","loginInfo","LoginName","openId","cookie","setCookie","$store","state","type","user","toast","message","icon","second","timer","setInterval","clearInterval","clear","$router","push","params"],"sources":["src/components/signIn.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <ul class=\"login-nav\">\n      <li class=\"login-nav__item active\">\n        <a @click=\"$router.push('/')\">登录</a>\n      </li>\n      <li class=\"login-nav__item\">\n        <a @click=\"$router.push('/signUp')\">注册</a>\n      </li>\n    </ul>\n\n    <label for=\"login-input-user\" class=\"login__label\">\n      用户名\n    </label>\n    <van-field v-model=\"model.username\" placeholder=\"请输入用户名\" />\n\n    <label for=\"login-input-password\" class=\"login__label\">\n      密码\n    </label>\n    <van-field v-model=\"model.passwd\" placeholder=\"请输入密码\" type=\"password\" />\n\n    <van-checkbox v-model=\"checked\" shape=\"square\" icon-size=\"15px\" checked-color=\"#26a2ff\" class=\"login__label--checkbox\">记住我</van-checkbox>\n\n    <button class=\"login__submit\" @click=\"login\">登录</button>\n\n    <a href=\"#\" class=\"login__forgot\">忘记密码?</a>\n\n  </div>\n\n</template>\n\n<script>\n  import { Toast } from 'vant'\n  import encrypt from '../assets/js/encrypt'\n  export default {\n    name: 'signIn',\n    data() {\n      return {\n        model: {\n          username: '',\n          passwd: '123456',\n        },\n        val: 'login',\n        checked: false,\n      }\n    },\n    methods: {\n      login() {\n        let url = '/recsys/login'\n        //密码解密\n        let res = {username: this.model.username, passwd: encrypt.Decrypt(this.model.passwd)}\n\n        this.axios.post(url, res).then(resource => {\n          if (resource.data.code === 200) {\n            console.log('success');\n            \n            let loginInfo = {\n              LoginName: res.username,\n              openId: \"asfafsfsfsdfsdfsdfdsf\"\n            }\n\n            // checke:true--选中记住我   checke:false--未选中记住我\n            if(this.checked){\n              // 调用setCookie方法，同时传递需要存储的数据，保存天数\n              this.cookie.setCookie(loginInfo, 7)\n            }else{\n              this.cookie.setCookie(loginInfo, 1)\n            }\n\n            this.$store.state.type = 'signIn'\n            this.$store.state.user.username = res.username\n\n            const toast = Toast({\n              message: '登陆成功',\n              icon:'success'\n            });\n            \n            let second = 1;\n            // 延迟一秒执行\n            const timer = setInterval(() => {\n              second--;\n              if (!second) {\n                 clearInterval(timer);\n                // 手动清除 Toast\n                Toast.clear();\n                this.$router.push({name:'recLists' ,params:{type:'signIn',username:this.model.username}})\n              }\n            }, 1000);\n\n          }if(resource.data.code === 500){\n            Toast('登陆失败')\n          }if(resource.data.code === 501){\n            Toast('密码输入错误')\n          }if(resource.data.code === 502){\n            Toast('用户名不存在')\n          }\n        })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n  /* 登录和注册的切换 */\n  .login-nav {\n    margin: 0 0 6em 1rem;\n  }\n\n\n  /* container */\n  .login-container {\n    height: 100vh;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 16px;\n    line-height: 1;\n    letter-spacing: 1px;\n    display: block;\n    position: relative;\n    z-index: 0;\n    background-image: url(https://img0.baidu.com/it/u=3564438015,1736378667&fm=26&fmt=auto);\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: 100% 100%;\n    background-color: black;\n    padding: 4rem 4rem 4rem 4rem;\n    height: 100vh;\n  }\n\n  /* 登录和注册的切换 */\n  .login-nav {\n    position: relative;\n    padding: 0;\n  }\n\n  .login-nav__item {\n    list-style: none;\n    display: inline-block;\n  }\n\n  .login-nav__item+.login-nav__item {\n    margin-left: 2.25rem;\n  }\n\n  .login-nav__item a {\n    position: relative;\n    color: rgba(255, 255, 255, 0.5);\n    text-decoration: none;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 1.25rem;\n    padding-bottom: .5rem;\n    transition: .20s all ease;\n  }\n\n  .login-nav__item.active a,\n  .login-nav__item a:hover {\n    color: #ffffff;\n    transition: .15s all ease;\n  }\n\n  .login-nav__item a:after {\n    content: '';\n    display: inline-block;\n    height: 10px;\n    background-color: rgb(255, 255, 255);\n    position: absolute;\n    right: 100%;\n    bottom: -1px;\n    left: 0;\n    border-radius: 50%;\n    transition: .15s all ease;\n  }\n\n  .login-nav__item a:hover:after,\n  .login-nav__item.active a:after {\n    background-color: rgb(17, 97, 237);\n    height: 2px;\n    right: 0;\n    bottom: 2px;\n    border-radius: 0;\n    transition: .20s all ease;\n  }\n\n  /* label标签 */\n  .login__label {\n    display: block;\n    padding-left: 1rem;\n    color: rgba(255, 255, 255, 0.5);\n    text-transform: uppercase;\n    font-size: .75rem;\n    margin-bottom: 1rem;\n  }\n\n  .login__label {\n    margin-top: 1.5rem;\n  }\n\n  /* 提交按钮 */\n  .login__submit {\n    color: #ffffff;\n    font-size: 1rem;\n    font-family: 'Montserrat', sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    margin-top: 2rem;\n    padding: .75rem;\n    border-radius: 2rem;\n    display: block;\n    width: 100%;\n    background-color: rgba(17, 97, 237, .75);\n    border: none;\n    cursor: pointer;\n  }\n\n  .login__submit:hover {\n    background-color: rgba(17, 97, 237, 1);\n  }\n\n  .login__label{\n    color: rgba(255, 255, 255, 0.5);\n    text-transform: uppercase;\n    font-size: .75rem;\n    margin-bottom: 1rem;\n  }\n\n  .login__label--checkbox {\n    font-size: .75rem;\n    margin-bottom: 1rem;\n    display: flex;\n    position: relative;\n    margin-top: 2rem;\n  }\n\n  .login__input--checkbox {\n    position: absolute;\n    top: .1rem;\n    left: 0;\n    margin: 0;\n  }\n\n  .login__forgot {\n    display: block;\n    margin-top: 3rem;\n    text-align: center;\n    color: rgba(255, 255, 255, 0.75);\n    font-size: .75rem;\n    text-decoration: none;\n    position: relative;\n    z-index: 1;\n  }\n\n  .login__forgot:hover {\n    color: rgb(17, 97, 237);\n  }\n</style>"],"mappings":";AAgCA,SAAAA,KAAA;AACA,OAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAC,QAAA;QACAC,MAAA;MACA;MACAC,GAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,IAAAC,GAAA;MACA;MACA,IAAAC,GAAA;QAAAP,QAAA,OAAAD,KAAA,CAAAC,QAAA;QAAAC,MAAA,EAAAL,OAAA,CAAAY,OAAA,MAAAT,KAAA,CAAAE,MAAA;MAAA;MAEA,KAAAQ,KAAA,CAAAC,IAAA,CAAAJ,GAAA,EAAAC,GAAA,EAAAI,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAd,IAAA,CAAAe,IAAA;UACAC,OAAA,CAAAC,GAAA;UAEA,IAAAC,SAAA;YACAC,SAAA,EAAAV,GAAA,CAAAP,QAAA;YACAkB,MAAA;UACA;;UAEA;UACA,SAAAf,OAAA;YACA;YACA,KAAAgB,MAAA,CAAAC,SAAA,CAAAJ,SAAA;UACA;YACA,KAAAG,MAAA,CAAAC,SAAA,CAAAJ,SAAA;UACA;UAEA,KAAAK,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACA,KAAAF,MAAA,CAAAC,KAAA,CAAAE,IAAA,CAAAxB,QAAA,GAAAO,GAAA,CAAAP,QAAA;UAEA,MAAAyB,KAAA,GAAA9B,KAAA;YACA+B,OAAA;YACAC,IAAA;UACA;UAEA,IAAAC,MAAA;UACA;UACA,MAAAC,KAAA,GAAAC,WAAA;YACAF,MAAA;YACA,KAAAA,MAAA;cACAG,aAAA,CAAAF,KAAA;cACA;cACAlC,KAAA,CAAAqC,KAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;gBAAArC,IAAA;gBAAAsC,MAAA;kBAAAZ,IAAA;kBAAAvB,QAAA,OAAAD,KAAA,CAAAC;gBAAA;cAAA;YACA;UACA;QAEA;QAAA,IAAAY,QAAA,CAAAd,IAAA,CAAAe,IAAA;UACAlB,KAAA;QACA;QAAA,IAAAiB,QAAA,CAAAd,IAAA,CAAAe,IAAA;UACAlB,KAAA;QACA;QAAA,IAAAiB,QAAA,CAAAd,IAAA,CAAAe,IAAA;UACAlB,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
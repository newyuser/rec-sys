{"ast":null,"code":"export default {\n  data() {\n    return {\n      isLoggedIn: false\n    };\n  },\n  watch: {\n    // 路由发生变化时调用\n    $route(to, from) {\n      if (this.cookie.getCookie('LoginName')) {\n        this.isLoggedIn = true;\n      } else {\n        this.isLoggedIn = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","isLoggedIn","watch","$route","to","from","cookie","getCookie"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 从列表跳到详情页，然后返回详情页的时候需要缓存列表页的状态，滚动位置信息，vue里提供了keep-alive组件用来缓存状态\r\n    被keep-alive包裹住的组件在重新进入时不会刷新\r\n    通过设置router中的meta.keepAlive属性值选择需要被缓存的组件\r\n    \r\n    点击退出登录,切换了其他账号登录后,保留的还是上一个账号的数据信息\r\n    通过在keep-alive中绑定isLoggedIn值解决 -->\r\n    <keep-alive v-if=\"isLoggedIn\">\r\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n    </keep-alive>\r\n    <router-view v-if=\"!$route.meta.keepAlive||!isLoggedIn\"></router-view>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        isLoggedIn:false,\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      // 路由发生变化时调用\r\n      $route(to, from) {\r\n        if (this.cookie.getCookie('LoginName')) {\r\n          this.isLoggedIn = true;\r\n        } else {\r\n          this.isLoggedIn = false;\r\n        }\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body,\r\n  html {\r\n    width: 100%;\r\n    height: 100%;\r\n    /* overflow: hidden; */\r\n  }\r\n\r\n  /* 去掉获取焦点时的边框 */\r\n  input {\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    display: black;\r\n  }\r\n\r\n  /* 登录注册页面输入框 */\r\n  input[type='text'],\r\n  input[type='password'] {\r\n    background-color: transparent !important;\r\n    padding: 0 !important;\r\n    margin: 0 !important;\r\n    border: 0 !important;\r\n    font-size: 1.2rem;\r\n    color: white !important;\r\n    height: 1.5rem !important;\r\n  }\r\n</style>\r\n\r\n<style scoped>\r\n  /* input框 */\r\n  /deep/ .van-cell__value {\r\n    color: white;\r\n    width: 100%;\r\n    padding: .7rem 1rem .3rem 1rem;\r\n    outline: none;\r\n    border-radius: 1.5rem;\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    letter-spacing: 1px;\r\n    min-height: 2rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n\r\n  /deep/ .van-cell__value:hover,\r\n  /deep/.van-cell__value:focus {\r\n    color: white;\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: transparent;\r\n  }\r\n\r\n  /deep/ .login-container [data-v-7ba5bd90] .van-cell__value {\r\n    height: 2rem;\r\n}\r\n\r\n  /* radio */\r\n  /deep/ .van-radio-group--horizontal {\r\n    justify-content: space-around\r\n  }\r\n\r\n  /* radio的label */\r\n  /deep/ .van-radio__label {\r\n    color: rgba(255, 255, 255, 0.25);\r\n    font-size: .9rem;\r\n  }\r\n\r\n  /* 复选框label的颜色 */\r\n  /deep/ .van-checkbox__label {\r\n    color: white;\r\n    font-size: .9rem;\r\n  }\r\n\r\n  /* 新闻列表上下左右留白 */\r\n  /deep/ [data-v-7c729b82] .van-cell__value {\r\n    margin-top: 1rem;\r\n    padding: 0px 20px;\r\n    height: 6rem;\r\n  }\r\n\r\n  /* tab高度 */\r\n  /deep/ .van-tabs--line .van-tabs__wrap {}\r\n\r\n  /* tab选中的颜色 */\r\n  /deep/ .van-tabs__line {\r\n    background-color: #1989FA;\r\n  }\r\n\r\n  /* tab字体 */\r\n  /deep/.van-tab__text--ellipsis {\r\n    font-size: 18px;\r\n    font-weight: 800;\r\n    color: cornflowerblue;\r\n}\r\n\r\n  /* navBar标题 */\r\n  /deep/ .van-nav-bar__title {\r\n    max-width: 60%;\r\n    margin: 0 auto;\r\n    color: #323233;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n  }\r\n\r\n  /* 个人中心退出登录按钮 */\r\n  /deep/ span[data-v-4aa99128] {\r\n    font-size: 1rem;\r\n  }\r\n\r\n   /* /deep/ .van-tab__pane {\r\n    height: 100vh;\r\n    overflow: auto;\r\n  } */\r\n</style>"],"mappings":"AAgBA;EACAA,KAAA;IACA;MACAC,UAAA;IACA;EACA;EAEAC,KAAA;IACA;IACAC,OAAAC,EAAA,EAAAC,IAAA;MACA,SAAAC,MAAA,CAAAC,SAAA;QACA,KAAAN,UAAA;MACA;QACA,KAAAA,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}